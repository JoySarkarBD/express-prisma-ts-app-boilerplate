import { Request, Response } from 'express';
import { ZodError } from 'zod';
import config from '../config/config';
import ServerResponse from '../helpers/responses/custom-response';

/**
 * Handles errors generated by Zod schema validation.
 *
 * @param req - The request object.
 * @param res - The response object.
 * @param zodErr - The Zod error object.
 * @returns The response object with error details.
 */
const zodErrorHandler = (req: Request, res: Response, zodErr: ZodError): Response => {
  // Extract and format errors from the Zod error object
  const errors = zodErr.errors.map((err) => ({
    field: err?.path?.join(', '),
    message: err?.message,
  }));

  // Log errors only in development environment
  if (config.NODE_ENV === 'development') {
    console.log(errors);
  }

  // Send error response using the global response helper
  return ServerResponse(res, false, 400, 'Validation error', null, errors);
};

export default zodErrorHandler;
